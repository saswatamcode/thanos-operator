---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: thanosqueries.monitoring.thanos.io
spec:
  group: monitoring.thanos.io
  names:
    kind: ThanosQuery
    listKind: ThanosQueryList
    plural: thanosqueries
    singular: thanosquery
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ThanosQuery is the Schema for the thanosqueries API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ThanosQuerySpec defines the desired state of ThanosQuery
            properties:
              customStoreLabelSelector:
                default:
                  matchLabels:
                    operator.thanos.io/store-api: "true"
                description: |-
                  By default, the operator will add all discoverable StoreAPIs to the Querier,
                  if they have store labels. You can optionally choose to override default
                  StoreAPI selector labels, to select a subset of StoreAPIs to query.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              image:
                description: Container image to use for the Thanos components.
                type: string
              imagePullPolicy:
                default: IfNotPresent
                description: |-
                  Image pull policy for the Thanos containers.
                  See https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy for more details.
                enum:
                - Always
                - Never
                - IfNotPresent
                type: string
              imagePullSecrets:
                description: |-
                  An optional list of references to Secrets in the same namespace
                  to use for pulling images from registries.
                  See http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              labels:
                additionalProperties:
                  type: string
                description: Labels are additional labels to add to the Querier component.
                type: object
              logFormat:
                default: logfmt
                description: Log format for Thanos.
                enum:
                - logfmt
                - json
                type: string
              logLevel:
                default: info
                description: Log level for Thanos.
                enum:
                - debug
                - info
                - warn
                - error
                type: string
              paused:
                description: |-
                  When a resource is paused, no actions except for deletion
                  will be performed on the underlying objects.
                type: boolean
              querierReplicaLabels:
                default:
                - replica
                description: |-
                  Labels to treat as a replica indicator along which data is deduplicated.
                  Still you will be able to query without deduplication using 'dedup=false' parameter.
                  Data includes time series, recording rules, and alerting rules.
                  Refer to https://thanos.io/tip/components/query.md/#deduplication-replica-labels
                items:
                  type: string
                type: array
              replicas:
                default: 1
                description: Replicas is the number of querier replicas.
                format: int32
                minimum: 1
                type: integer
              version:
                description: |-
                  Version of Thanos to be deployed.
                  If not specified, the operator assumes the latest upstream version of
                  Thanos available at the time when the version of the operator was released.
                type: string
            type: object
          status:
            description: ThanosQueryStatus defines the observed state of ThanosQuery
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the state of the Querier.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
